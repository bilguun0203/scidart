import 'package:scidart/src/numdart/numdart.dart';
import 'package:test/test.dart';

void main() {
  test('inverse', () {
    var a = Array2d([
      Array([1.0, 2.0, 3.0]),
      Array([4.0, 5.0, 6.0]),
      Array([7.0, 8.0, 10.0]),
    ]);

    var frac = 6;

    var i = matrixPseudoInverse(a);
    array2dTruncateEachElement(i, frac);

    var iExp = Array2d([
      Array([-0.66666667, -1.33333333, 1.0]),
      Array([-0.66666667, 3.66666667, -2.0]),
      Array([1.0, -2.0, 1.0])
    ]);
    array2dTruncateEachElement(iExp, frac);

    print(i);

    expect(i, iExp);
  });

  test('pseudo inverse 1', () {
    var a = Array2d([
      Array([4.0, 0.0]),
      Array([3.0, -5.0]),
    ]);

    var frac = 6;

    var i = matrixPseudoInverse(a);
    array2dTruncateEachElement(i, frac);

    var iExp = Array2d([
      Array([0.25, 0.0]),
      Array([0.15000001, -0.2])
    ]);
    array2dTruncateEachElement(iExp, frac);

    print(i);

    expect(i, iExp);
  });

  test('pseudo inverse 2', () {
    var a = Array2d([
      Array([1.0, 2.0]),
      Array([4.0, 5.0]),
      Array([7.0, 8.0]),
    ]);

    var frac = 6;

    var i = matrixPseudoInverse(a);
    array2dTruncateEachElement(i, frac);

    var iExp = Array2d([
      Array([-1.16666671, -0.33333335, 0.50000002]),
      Array([0.99999997, 0.33333332, -0.33333333])
    ]);
    array2dTruncateEachElement(iExp, frac);

    print(i);

    expect(i, iExp);
  });

  test('pseudo inverse 3', () {
    var a = Array2d([
      Array([1.0, 2.0, 3.0]),
      Array([4.0, 5.0, 6.0]),
    ]);

    var frac = 6;

    var i = matrixPseudoInverse(a);
    array2dTruncateEachElement(i, frac);

    var iExp = Array2d([
      Array([-0.94444441, 0.44444443]),
      Array([-0.11111108, 0.1111111]),
      Array([0.72222224, -0.22222223])
    ]);
    array2dTruncateEachElement(iExp, frac);

    print(i);

    expect(i, iExp);
  });

  test('pseudo inverse 4', () {
    var a = Array2d([
      Array([
        -0.16748413,
        -0.25713807,
        0.05209336,
        0.05236177,
        0.08030664,
        -0.10824572,
        -0.08914243,
        -0.23324244,
        -0.12462341,
        0.02588563,
        0.06040111,
        -0.04403144,
        -0.02019137,
        -0.04224376,
        0.03583599,
        -0.09251354,
        0.03925452,
        0.2412558,
        0.16008309,
        -0.10231686,
        0.18960793,
        0.05325555,
        -0.05121969,
        0.06444506,
        0.18928126,
        -0.0685923,
        -0.01582624,
        -0.18446591,
        -0.25220075,
        -0.11070679,
        -0.04477185,
        -0.20868526,
        -0.06421356,
        0.01354467,
        0.22706659,
        0.06376518,
        0.07106944,
        -0.05905709,
        -0.10863672,
        0.01885493,
        -0.05106923,
        -0.02422755,
        -0.10678038,
        -0.22231305,
        -0.14058217,
        -0.1340224,
        -0.01778165,
        -0.17678824,
        0.03011126,
        0.09341741,
        0.22934659,
        -0.07731535,
        0.07355054,
        0.04905318,
        0.04883913,
        -0.0700414,
        -0.13599691,
        -0.03359669,
        0.03001902,
        0.08352407,
        0.05133973,
        -0.21725062,
        0.12013258,
        -0.00355456
      ]),
      Array([
        -0.14181046,
        -0.09593384,
        0.0580644,
        -0.01249381,
        -0.03559172,
        0.09769415,
        0.28063214,
        0.02971524,
        0.01386421,
        -0.01429665,
        0.03938624,
        0.00975499,
        0.07980648,
        0.01055495,
        -0.02631105,
        0.02456899,
        -0.0084606,
        -0.20823689,
        -0.21105862,
        0.02076464,
        -0.1054666,
        0.08243176,
        0.06513707,
        -0.21264234,
        -0.12320376,
        0.01240729,
        0.00225458,
        0.14948122,
        0.03738829,
        0.16673101,
        -0.16123337,
        -0.00738836,
        0.01012276,
        0.03893612,
        -0.18233511,
        0.07509349,
        -0.01433121,
        0.01020049,
        -0.11866897,
        -0.00311301,
        0.01014678,
        0.0036094,
        0.03979923,
        -0.16269882,
        0.07792281,
        -0.0772781,
        -0.00785626,
        -0.06678447,
        -0.00730289,
        0.07440206,
        -0.01789078,
        0.00092349,
        -0.04137615,
        0.04865227,
        0.20891048,
        -0.03279566,
        0.26497144,
        0.21418601,
        -0.2859334,
        -0.0192943,
        -0.00694481,
        0.11998446,
        -0.04965296,
        0.00914988
      ]),
      Array([
        -0.18998486,
        -0.14604442,
        0.03278945,
        0.04619233,
        0.06711634,
        -0.09768118,
        -0.11589281,
        0.08738884,
        -0.10652628,
        0.02742901,
        0.09176607,
        -0.03813488,
        0.10216121,
        -0.03568624,
        0.16491549,
        -0.08001844,
        0.03225848,
        -0.06470422,
        0.19903211,
        -0.09011588,
        -0.00096281,
        0.10146875,
        -0.03615346,
        0.24347264,
        0.1738853,
        -0.06088739,
        -0.01459276,
        0.1241724,
        0.2375818,
        0.14530705,
        -0.02821174,
        0.20692809,
        -0.08158545,
        -0.05269273,
        0.04348168,
        0.05265988,
        0.06168569,
        -0.05218034,
        -0.04077287,
        0.01801823,
        -0.04355009,
        -0.02074077,
        -0.19247678,
        0.14266914,
        -0.10588263,
        -0.17153594,
        -0.01696132,
        -0.13980578,
        0.02732167,
        -0.09105165,
        -0.269913,
        -0.06682349,
        -0.19108829,
        0.10802482,
        0.0410317,
        -0.09838875,
        -0.24812053,
        -0.04870525,
        0.12135331,
        0.07484345,
        0.04174877,
        0.04553622,
        -0.236838,
        -0.00140682
      ])
    ]);

    var frac = 5;

    var i = matrixPseudoInverse(a);
    array2dTruncateEachElement(i, frac);

    var iExp = Array2d([
      Array([-2.35663265e-01, -3.07348132e-01, -2.36016572e-01]),
      Array([-3.25843722e-01, -2.64093369e-01, -1.71209082e-01]),
      Array([8.00291821e-02, 1.11408465e-01, 4.55764234e-02]),
      Array([5.35715781e-02, 9.32063349e-03, 4.79396060e-02]),
      Array([7.63438940e-02, -1.07743144e-02, 6.61545694e-02]),
      Array([-8.41755867e-02, 8.69448632e-02, -8.82671252e-02]),
      Array([6.47255778e-03, 3.61990929e-01, -7.64619485e-02]),
      Array([-2.65954792e-01, -2.54630446e-02, 1.20775901e-01]),
      Array([-1.33548766e-01, -4.50956002e-02, -1.13101974e-01]),
      Array([2.32178159e-02, -6.58482313e-03, 2.75028441e-02]),
      Array([7.92539939e-02, 9.77256149e-02, 1.09827824e-01]),
      Array([-4.53680940e-02, -8.82038474e-03, -3.96327451e-02]),
      Array([-3.47942114e-04, 1.29978240e-01, 1.34261981e-01]),
      Array([-4.31407727e-02, -6.52037561e-03, -3.67595144e-02]),
      Array([2.20446717e-02, 4.82857600e-03, 1.83722451e-01]),
      Array([-9.38300043e-02, -1.24699324e-02, -8.23912099e-02]),
      Array([4.06385139e-02, 7.89017603e-03, 3.33648771e-02]),
      Array([2.08234489e-01, -2.32223094e-01, -1.28229469e-01]),
      Array([9.66822654e-02, -2.17207134e-01, 1.81286082e-01]),
      Array([-1.06032014e-01, -2.35990360e-02, -9.41860750e-02]),
      Array([1.82037190e-01, -8.68955702e-02, -3.22352722e-02]),
      Array([8.61809403e-02, 1.60764143e-01, 1.29494280e-01]),
      Array([-3.34841162e-02, 7.10685030e-02, -2.66013872e-02]),
      Array([-1.79561898e-02, -2.46472821e-01, 2.38205761e-01]),
      Array([1.64526016e-01, -8.08025897e-02, 1.66766778e-01]),
      Array([-7.16107711e-02, -1.81537271e-02, -6.39719516e-02]),
      Array([-1.67134032e-02, -5.19209355e-03, -1.55029921e-02]),
      Array([-1.67331040e-01, 1.77008569e-01, 1.82652980e-01]),
      Array([-2.94317037e-01, 6.88746572e-03, 2.97111720e-01]),
      Array([-7.63824657e-02, 2.33666837e-01, 2.05838814e-01]),
      Array([-1.09735817e-01, -2.60924578e-01, -5.99176437e-02]),
      Array([-2.58261144e-01, -4.92371395e-02, 2.50678867e-01]),
      Array([-6.60971850e-02, -2.37827599e-02, -8.86081606e-02]),
      Array([3.32913920e-02, 5.29456697e-02, -5.45383357e-02]),
      Array([1.94679350e-01, -1.78888828e-01, 2.61023082e-03]),
      Array([9.86791998e-02, 1.44663230e-01, 7.10245818e-02]),
      Array([7.37389475e-02, 1.63592212e-02, 6.43873364e-02]),
      Array([-6.18480220e-02, -1.63000617e-02, -5.48876673e-02]),
      Array([-1.67679012e-01, -2.23607779e-01, -6.26573488e-02]),
      Array([1.97164118e-02, 5.66998683e-03, 1.91225111e-02]),
      Array([-5.30902445e-02, -1.18356347e-02, -4.53978293e-02]),
      Array([-2.56244969e-02, -7.41652586e-03, -2.18539927e-02]),
      Array([-9.80179906e-02, -1.60441697e-02, -2.08795652e-01]),
      Array([-3.27367604e-01, -2.96623170e-01, 1.48270965e-01]),
      Array([-1.28604010e-01, 4.41903621e-02, -9.94721651e-02]),
      Array([-1.74079359e-01, -1.95865929e-01, -2.04697341e-01]),
      Array([-2.25662030e-02, -2.13524997e-02, -2.00055540e-02]),
      Array([-2.21939802e-01, -1.90127492e-01, -1.63442478e-01]),
      Array([3.07175126e-02, 5.32566756e-03, 2.84234453e-02]),
      Array([1.41668662e-01, 1.27810538e-01, -9.71626639e-02]),
      Array([2.76839703e-01, 7.61659443e-03, -3.29502195e-01]),
      Array([-8.56324658e-02, -3.95044573e-02, -7.24467263e-02]),
      Array([8.20108056e-02, -6.98767602e-02, -2.33228967e-01]),
      Array([6.84631616e-02, 1.10322654e-01, 1.31049722e-01]),
      Array([1.31233737e-01, 3.35539490e-01, 8.33720043e-02]),
      Array([-8.76528174e-02, -9.27264020e-02, -1.15678780e-01]),
      Array([-4.58253622e-02, 2.96920747e-01, -2.29507774e-01]),
      Array([4.26298976e-02, 2.96345234e-01, -1.44631043e-02]),
      Array([-7.75969177e-02, -3.90590549e-01, 8.53791535e-02]),
      Array([8.56170952e-02, 1.60256550e-02, 7.79308081e-02]),
      Array([5.46924323e-02, 1.63504705e-02, 4.38931547e-02]),
      Array([-2.11586922e-01, 1.06557190e-01, 8.81798267e-02]),
      Array([1.35980725e-01, -7.35305548e-02, -2.90522128e-01]),
      Array([-6.87483232e-04, 1.20053627e-02, 2.90258322e-04]),
    ]);
    array2dTruncateEachElement(iExp, frac);

    print(i);

    expect(i, iExp);
  });
}
